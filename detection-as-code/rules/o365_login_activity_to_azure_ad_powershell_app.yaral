rule o365_login_activity_to_azure_ad_powershell_app {

  meta:
    author = "Google Cloud Security"
    description = "Logins to Azure AD PowerShell app can have legitimate purposes, but are also abused to gain access to user information. Programatic access to Entra ID (Azure AD) should generally be through apps, so reviewing these activities is needed."
    mitre_attack_tactic = "Initial Access"
    mitre_attack_technique = "Valid Accounts: Cloud Accounts"
    mitre_attack_url = "https://attack.mitre.org/techniques/T1078/004/"
    mitre_attack_version = "v14.1"
    type = "hunt"
    platform = "azure"
    data_source = "o365"   
    severity = "Medium"
    priority = "Medium"

  events:
    $login.metadata.base_labels.namespaces = "LogStory"
    $login.metadata.base_labels.namespaces = "LogStory"
    $login.metadata.event_type = "USER_LOGIN"
    $login.metadata.product_event_type = "UserLoggedIn"
    $login.metadata.product_name = "Office 365"
    $login.metadata.vendor_name = "Microsoft"
    $login.target.resource.product_object_id = "1b730954-1685-4b74-9bfd-dac224a7b894"
    $login.security_result.action = "ALLOW"
    
    // Below filters ADFS Sync Account that runs every 30 minutes between AD and Entra ID (for federated enrivonments); can use display name or email address
    //$login.target.user.userid != "insert your email address here" and
    //$login.target.user.user_display_name != "On-Premises Directory Synchronization Service Account"     

    $login.target.user.userid = $userid

  match:
    $userid over 5m

  outcome:
    $risk_score = 65
    $mitre_attack_tactic = "Initial Access"
    $mitre_attack_technique = "Valid Accounts: Cloud Accounts"
    $mitre_attack_technique_id = "T1078.004"
    $event_count = count_distinct($login.metadata.id)
    $security_summary = array_distinct($login.security_result.summary)
    $user_agent = array_distinct($login.network.http.user_agent)
    $country_region_login_attempt = array_distinct($login.principal.ip_geo_artifact.location.country_or_region)
    //added to populate alert graph with additional context
    $principal_ip = array_distinct($login.principal.ip)
    //$target_user_email_addresses = array_distinct($login.target.user.email_addresses)
    //$target_user_userid = array_distinct($login.target.user.userid)

  condition:
    $login
}



