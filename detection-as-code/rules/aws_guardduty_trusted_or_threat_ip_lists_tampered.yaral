rule aws_guardduty_trusted_or_threat_ip_lists_tampered {

  meta:
    author = "Google Cloud Security"
    description = "Detects when a GuardDuty Detector's trusted or threat intel IP lists are deleted or disabled."
    mitre_attack_tactic = "Defense Evasion"
    mitre_attack_technique = "Impair Defenses"
    mitre_attack_url = "https://attack.mitre.org/techniques/T1562/"
    mitre_attack_version = "v13.1"
    type = "Alert"
    data_source = "AWS CloudTrail"
    platform = "AWS"
    severity = "High"
    priority = "High"

  events:
    $cloudtrail.metadata.base_labels.namespaces = "LogStory"
    $cloudtrail.metadata.base_labels.namespaces = "LogStory"
    $cloudtrail.metadata.vendor_name = "AMAZON"
    $cloudtrail.metadata.product_name = "AWS CloudTrail"
    $cloudtrail.metadata.product_event_type = "DeleteIPSet" or $cloudtrail.metadata.product_event_type = "DeleteThreatIntelSet" or
    (
      (
          $cloudtrail.metadata.product_event_type = "UpdateIPSet" or
          $cloudtrail.metadata.product_event_type = "UpdateThreatIntelSet"
      )
      and $cloudtrail.target.resource.attribute.labels["activate"] = "false"
    )
    $cloudtrail.security_result.action = "ALLOW"

  outcome:
    $risk_score = max(
        // Unauthorized geographies
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Cuba", 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Iran", 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "North Korea" , 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Russia", 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Syria", 40)
    )
    $mitre_attack_tactic = "Defense Evasion"
    $mitre_attack_technique = "Impair Defenses"
    $mitre_attack_technique_id = "T1562"
    $event_count = count_distinct($cloudtrail.metadata.id)
    $network_http_user_agent = $cloudtrail.network.http.user_agent
    $principal_ip = array_distinct($cloudtrail.principal.ip)
    $principal_ip_country = array_distinct($cloudtrail.principal.ip_geo_artifact.location.country_or_region)
    $principal_ip_state = array_distinct($cloudtrail.principal.ip_geo_artifact.location.state)
    $principal_user_display_name = $cloudtrail.principal.user.user_display_name
    $recipient_aws_account_id = $cloudtrail.target.resource.attribute.labels["Recipient Account Id"]
    $aws_region = $cloudtrail.principal.location.name
    $target_resource_name = $cloudtrail.target.resource.name
    $target_resource_product_object_id = $cloudtrail.target.resource.product_object_id

  condition:
    $cloudtrail
}
